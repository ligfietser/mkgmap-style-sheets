# -------------------------------------------------------------------
# This is the default mkgmap style file for converting OSM ways
# into Garmin lines.
# Any line prefaced with # is a comment and will not be applied.
# Each line is a rule, of the generalised format:
#  OSM_tag(s)_to_match  [Garmin_type_code resolution]
# See http://wiki.openstreetmap.org/wiki/Mkgmap/help/style_rules
# and http://wiki.openstreetmap.org/wiki/Mkgmap/help/Custom_styles
# for more information.

# first set the country code
mkgmap:country!=* & mkgmap:admin_level2=* { set mkgmap:country='${mkgmap:admin_level2}' }
mkgmap:country!=* & addr:country=* { set mkgmap:country='${addr:country}' }
mkgmap:country!=* & is_in:country=* { set mkgmap:country='${is_in:country}' } 

mkgmap:country=DEU & mkgmap:region!=* & mkgmap:admin_level3=* { set mkgmap:region='${mkgmap:admin_level3}' }
mkgmap:region!=* & mkgmap:admin_level4=* { set mkgmap:region='${mkgmap:admin_level4}' }
mkgmap:region!=* & mkgmap:admin_level5=* { set mkgmap:region='${mkgmap:admin_level5}' } 
mkgmap:region!=* & mkgmap:admin_level6=* { set mkgmap:region='${mkgmap:admin_level6}' } 
mkgmap:region!=* & is_in:county=* { set mkgmap:region='${is_in:county}' }

# Germany = DEU cities
mkgmap:country=DEU & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' } 
mkgmap:country=DEU & mkgmap:city!=* & mkgmap:admin_level7=* { set mkgmap:city='${mkgmap:admin_level7}' } 
mkgmap:country=DEU & mkgmap:city!=* & mkgmap:admin_level6=* { set mkgmap:city='${mkgmap:admin_level6}' } 
mkgmap:country=DEU & mkgmap:city!=* & mkgmap:admin_level9=* { set mkgmap:city='${mkgmap:admin_level9}' } 
mkgmap:country=DEU & mkgmap:city!=* & mkgmap:admin_level10=* { set mkgmap:city='${mkgmap:admin_level10}' } 

mkgmap:country=NLD & mkgmap:city!=* & mkgmap:admin_level10=* { set mkgmap:city='${mkgmap:admin_level10}' } 
mkgmap:country=BEL & mkgmap:city!=* & mkgmap:admin_level9=* { set mkgmap:city='${mkgmap:admin_level9}' }
mkgmap:country=AUT & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
mkgmap:country=CZE & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
mkgmap:country=CZE & mkgmap:city!=* & mkgmap:admin_level7=* { set mkgmap:city='${mkgmap:admin_level7}' }
mkgmap:country=DNK & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
mkgmap:country=DNK & mkgmap:city!=* & mkgmap:admin_level7=* { set mkgmap:city='${mkgmap:admin_level7}' }
mkgmap:country=FIN & mkgmap:city!=* & mkgmap:admin_level9=* { set mkgmap:city='${mkgmap:admin_level9}' }
mkgmap:country=FIN & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
mkgmap:country=FRA & mkgmap:city!=* & mkgmap:admin_level9=* { set mkgmap:city='${mkgmap:admin_level9}' }
mkgmap:country=FRA & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
mkgmap:country=ISL & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
mkgmap:country=ITA & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
mkgmap:country=LUX & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
mkgmap:country=NOR & mkgmap:city!=* & mkgmap:admin_level9=* { set mkgmap:city='${mkgmap:admin_level9}' }
mkgmap:country=POL & mkgmap:city!=* & mkgmap:admin_level10=* { set mkgmap:city='${mkgmap:admin_level10}' }
mkgmap:country=POL & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
mkgmap:country=PRT & mkgmap:city!=* & mkgmap:admin_level9=* { set mkgmap:city='${mkgmap:admin_level9}' }
mkgmap:country=PRT & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
mkgmap:country=SVN & mkgmap:city!=* & mkgmap:admin_level10=* { set mkgmap:city='${mkgmap:admin_level10}' }
mkgmap:country=ESP & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
mkgmap:country=SWE & mkgmap:city!=* & mkgmap:admin_level9=* { set mkgmap:city='${mkgmap:admin_level9}' }
mkgmap:country=SWE & mkgmap:city!=* & mkgmap:admin_level7=* { set mkgmap:city='${mkgmap:admin_level7}' }
mkgmap:country=CHE & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
 
# common rules for all the rest of countries
mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' } 
mkgmap:city!=* & mkgmap:admin_level7=* { set mkgmap:city='${mkgmap:admin_level7}' } 
mkgmap:city!=* & mkgmap:admin_level9=* { set mkgmap:city='${mkgmap:admin_level9}' } 
mkgmap:city!=* & mkgmap:admin_level10=* { set mkgmap:city='${mkgmap:admin_level10}' } 
mkgmap:city!=* & is_in:city=* { set mkgmap:city='${is_in:city}' }
mkgmap:city!=* & addr:city=* { set mkgmap:city='${addr:city}' }

mkgmap:postal_code!=* & mkgmap:postcode=* { set mkgmap:postal_code='${mkgmap:postcode}' } 
mkgmap:postal_code!=* & addr:postcode=* { set mkgmap:postal_code='${addr:postcode}' } 

highway=* & bicycle!=no {add toll=yes}
route=ferry {add mkgmap:ferry=1}
(ncn_from_relation=yes | rcn_from_relation=yes | icn_from_relation=yes | lcn_from_relation=yes | tcn_from_relation=yes | ncn=yes | rcn=yes | lcn=yes | ncn_ref=* | rcn_ref=* | lcn_ref=* ) 
	{ add bicycleroute=yes; set toll=no; add bicycle = yes; add foot = yes ; } 

 
(oneway=1 | oneway=true) { set oneway=yes }
(oneway=no) { delete 'oneway' }
			 
aeroway=runway [0x00  resolution 20 continue with_actions]
aeroway=taxiway [0x00 resolution 23 continue with_actions]

man_made=dyke | man_made=dike | embankment=yes | man_made=embankment | man_made=groyne [0x10015 resolution 23 continue with_actions]
cutting=yes  [0x10215 resolution 23 continue with_actions]

# Contours take their name from the elevation setting.
contour=elevation & contour_ext=elevation_minor
	{ name '${ele|conv:m=>ft}'; }
	[0x20 resolution 23]
contour=elevation & contour_ext=elevation_medium
	{ name '${ele|conv:m=>ft}'; }
	[0x21 resolution 22]
contour=elevation & contour_ext=elevation_major
	{ name '${ele|conv:m=>ft}'; }
	[0x22 resolution 22]
contour=elevation | contour_ext=elevation
	{ name '${ele|conv:m=>ft}'; }
	[0x21 resolution 22]
	

# Roundabouts
junction=roundabout [0x0c road_class=1 road_speed=1 resolution 23 continue with_actions]


# Flag unpaved roads

highway=*
& (surface=cobblestone | surface=compacted | surface=dirt |
   surface=earth | surface=grass | surface=grass_paver |
   surface=gravel | surface=grit | surface=ground | surface=mud |
   surface=pebblestone | surface=sand | surface=unpaved |
   mtb:scale=* |
   tracktype ~ 'grade[3-6]' |
   smoothness ~ '.*(bad|horrible|impassable)' |
   sac_scale ~ '.*(mountain|alpine)_hiking' |
   sport=via_ferrata)
{ add mkgmap:unpaved=1 }

(highway=bridleway | highway=track | highway=unsurfaced)
& surface!=* & tracktype!=* & smoothness!=* & sac_scale!=*
{ add mkgmap:unpaved=1 }

highway=path & bicycle!=designated
& surface!=* & tracktype!=* & smoothness!=* & sac_scale!=*
{ add mkgmap:unpaved=1 }

# Convert highways to most specific
highway=motorway_link | (highway=* & motorroad=yes) { set highway=motorway }
highway=trunk_link { set highway=trunk }
(highway=trunk | highway=motorway)  & cycleway=* { set highway=primary }
(highway=trunk | highway=motorway)  & bicycle=yes { set highway=primary }
(mkgmap:country=NLD | mkgmap:country=BEL |  mkgmap:country=LUX |  mkgmap:country=DEU | mkgmap:country=FRA | mkgmap:country=AUT | mkgmap:country=CHE | mkgmap:country=DNK | mkgmap:country=HUN | mkgmap:country=ROU ) & highway=trunk { set highway=motorway }
highway=trunk { set highway=primary }
highway=primary_link { set highway=primary }
highway=secondary_link { set highway=secondary }
highway=tertiary_link { set highway=tertiary }
highway=byway | highway=minor | highway=living_street | highway=residential | highway=road { set highway=unclassified }
(highway=unclassified | highway=tertiary | highway=secondary | highway=service) & (mkgmap:unpaved=1) { set highway=track; add tracktype=grade2 }
highway=unsurfaced { set highway=track }
highway=track & tracktype=grade1 { set highway=unclassified }
highway=cycleroad  { set highway=cycleway }
cycleway=no { delete 'cycleway'; }
bicycle=permissive | bicycle=official { set bicycle=yes }
highway=footway & (bicycle=designated | cycleway=*) { set highway=cycleway }
(highway=path | highway=track) & (bicycle=designated) { set highway=cycleway }
(highway=footway | highway=path)  & (bicycle=yes) & (surface=paved | surface=asphalt | smoothness=excellent) { set highway=cycleway }

highway=path & horse=designated { set highway=bridleway }
highway=path & foot=designated { set highway=footway }
leisure=track & sport=cycling { set highway=cycleway }
leisure=track & sport!=cycling { set highway=service }

bicycle=lane { set cycleway=lane }
(oneway:bicycle=yes | oneway:bicycle=1 | bicycle:oneway=1 | oneway:bicycle=true | bicycle:oneway=true | bicycle:oneway=1) {set bicycle:oneway=yes; delete 'oneway:bicycle'}

(bicycle=opposite_lane | cycleway=opposite_track) { set cycleway=opposite_lane }
(cycleway=lane_left | cycleway:left=lane | cycleway=track_left | cycleway:left=path | cycleway:left=yes | cycleway:left=track) { set cycleway=left }
(cycleway=right | cycleway=track_right | cycleway:right=path | cycleway:right=track | cycleway:right=yes | cycleway=lane_right | cycleway:right=lane) { set cycleway=right }
(cycleway=path | cycleway=yes | cycleway=both | cycleway=segregated | bicycle=track) { set cycleway=track }

highway=track & (cycleway=track | cycleway=left | cycleway=right) { set highway=cycleway; add track=yes; set mkgmap:unpaved=0; delete 'cycleway'}
highway=cycleway & cycleway=* & cycleway!=opposite { delete 'cycleway'; }

# ways under construction
highway=construction | (highway=* & construction=*) {add access = no} [0x0b road_class=0 road_speed=1 resolution 22 continue]

# Treat disused ways as highway=service, but at lower road_speed.
highway=* & disused=yes [0x07 road_class=0 road_speed=1 resolution 22 continue]


# bridges, tunnels, dams
waterway=dam & highway=* [0x2b default_name="dam" resolution 23 continue with_actions]
waterway=dam & highway!=* [0x08 default_name="dam" resolution 23 continue with_actions]

(bridge=yes | bridge=true | bridge=viaduct) & highway!=proposed & railway!=proposed   [0x2b resolution 23 continue with_actions]
(tunnel=yes | tunnel=true | tunnel=1) & highway!=proposed & railway!=* & waterway!=* [0x10109 resolution 23 continue with_actions]


#roads not allowed for cycling

highway=motorway { set access = no; set motorcar = yes } [0x10000  resolution 18-16 continue with_actions]
highway=motorway [0x10014 resolution 21-20 continue with_actions]
highway=motorway {name '${ref|highway-symbol:box}'} [0x10013 resolution 22]

highway=* & access=private & bicycle!=yes & mkgmap:unpaved!=1 & highway!=footway & highway!=path & highway!=track [0x07 road_class=0 road_speed=0 resolution 22]

# cycleways
cyclestreet=yes | cycleway=cyclestreet | bicycle_road=yes | (highway=unclassified & bicycle=designated) {add cyclestreet=yes} [0x11 resolution 21-20 continue with_actions]
cyclestreet=yes | cycleway=cyclestreet | bicycle_road=yes | (highway=unclassified & bicycle=designated) {add cyclestreet=yes} [0x10116 resolution 24-22 continue with_actions]
cycleway=lane & oneway!=yes {add bicycle = yes; add foot = yes} [0x26 resolution 23 continue with_actions]
(cycleway=track | cycleway=lane) & oneway=yes  [0x10005 resolution 23 continue with_actions]
cycleway=opposite_lane & oneway=-1 [0x10005 resolution 23 continue with_actions]
cycleway=right [0x10005 resolution 23 continue with_actions]
cycleway=left | (cycleway=opposite_lane & oneway=yes) [0x10006 resolution 23 continue with_actions]
cycleway=track & highway!=track & oneway!=yes [0x10009 resolution 23 continue with_actions]


# Oneways street with cycleway=opposite flagged are not oneway for us
(oneway=yes | oneway=-1) & (cycleway=opposite | cycleway=opposite_lane  | bicycle:oneway=no | oneway:bicycle=no) {set cycling=twoway}

# display direction arrows
(oneway=yes | oneway:bicycle=yes | bicycle:oneway=yes ) & (cycling!=twoway) & bicycle!=no [0x10007 resolution 24 continue with_actions]
(oneway=yes | oneway:bicycle=yes | bicycle:oneway=yes ) & (cycling=twoway)  [0x10008 resolution 24 continue with_actions]

(oneway=-1 | oneway:bicycle=-1 | bicycle:oneway=-1 ) & (cycling!=twoway) & bicycle!=no  [0x10010 resolution 24 continue with_actions]
(oneway=-1 | oneway:bicycle=-1 | bicycle:oneway=-1 ) & (cycling=twoway) [0x10011 resolution 24 continue with_actions]

(cycling=twoway | bicycle:oneway=no | oneway:bicycle=no)   {delete 'oneway'}



highway=* & opening_hours=* [0x10016 resolution 23 continue with_actions]
highway=* & bicycleroute!=yes {name '${name} (${ref})' | '${name}' | '${ref}' }


mtb_from_relation=yes & bicycleroute!=yes {name '${mname}'} [0x1a resolution 22 continue with_actions]

# Ways sorted roughly by descending order of class
highway=cycleway & access!=no {add access = no; add bicycle = yes; add foot = yes}
highway=cycleway [0x11 resolution 22-20 continue with_actions]
highway=cycleway & track=yes  [0x1602 road_class=2 road_speed=2 resolution 23 continue]
highway=cycleway & (mkgmap:unpaved=1) {set mkgmap:unpaved=0} [0x0e road_class=2 road_speed=2 resolution 23 continue]
highway=cycleway & (mkgmap:unpaved!=1) & track!=yes [0x16 road_class=4 road_speed=3 resolution 23 continue]


(highway=unclassified | highway=service) [0x10000 resolution 21-20 continue with_actions]
(highway=unclassified | highway=service)  [0x10 resolution 22-22 continue with_actions]

highway=service  & bicycle!=no  [0x07 road_class=1 road_speed=2 resolution 23 continue]
highway=unclassified & bicycle!=no  [0x060 road_class=3 road_speed=2 resolution 23  continue with_actions]
highway=unclassified & bicycle=no {add foot=no} [0x10018 resolution 23]
highway=service & bicycle=no {add foot=no} [0x10018 resolution 23]

highway=tertiary [0x10001 resolution 22-20 continue with_actions]
highway=tertiary & bicycle!=no [0x050 road_class=3 road_speed=2 resolution 23 continue with_actions]
highway=tertiary & bicycle=no {add foot=no} [0x10004 resolution 23]

 
highway=secondary [0x12 resolution 21-20 continue with_actions]
highway=secondary & bicycle!=no [0x040 road_class=2 road_speed=2 resolution 22 continue with_actions]
highway=secondary & bicycle=no  {add foot=no} [0x10003 resolution 22]


highway=primary [0x10000 resolution 18-16 continue with_actions]
highway=primary [0x10014 resolution 21-20 continue with_actions]
highway=primary & bicycle!=no [0x030 road_class=1 road_speed=2 resolution 22 continue with_actions]
highway=primary & bicycle=no {add foot=no} [0x10002 resolution 22]
 
 
highway=pedestrian & bicycle=yes [0x08 road_class=1 road_speed=1 resolution 22 continue with_actions]
highway=pedestrian & bicycle!=yes {add access = no; add foot = yes} [0x08 road_class=0 road_speed=0 resolution 22 continue]


(highway=track | highway=path | highway=footway | highway=pedestrian) & bicycleroute=yes [0x1502 resolution 21-20 continue with_actions]
highway=track & bicycleroute!=yes [0x15 resolution 21-21 continue with_actions]
highway=track & (tracktype=grade1 | tracktype=grade2) [0x0f road_class=1 road_speed=1 resolution 22 continue]
highway=track & (tracktype=grade3 | tracktype=grade4 | tracktype=grade5 | tracktype!=*) & bicycleroute=yes [0x0d02 road_class=1 road_speed=1 resolution 22 continue]
highway=track & tracktype=grade3 & (bicycle=yes | mtb_from_relation=yes) & bicycleroute!=yes [0x0d road_class=1 road_speed=1 resolution 22]
highway=track & tracktype=grade3 & bicycleroute!=yes [0x0f road_class=0 road_speed=0 resolution 22]
highway=track & (tracktype=grade4 | tracktype=grade5 | tracktype!=*) & bicycleroute!=yes & (bicycle=yes | mtb_from_relation=yes) [0x0d road_class=0 road_speed=0 resolution 22]
highway=track & (tracktype=grade4 | tracktype=grade5 | tracktype!=*) & bicycleroute!=yes [0x0a road_class=0 road_speed=0 resolution 22]

(highway=path | highway=footway | highway=bridleway) & bicycleroute=yes [0x0d02 road_class=1 road_speed=1 resolution 22 continue]
(highway=path | highway=footway | highway=bridleway) & bicycleroute!=yes & (bicycle=yes  | mtb_from_relation=yes | cycleway=*) [0x0d road_class=1 road_speed=1 resolution 22]
(highway=path | highway=footway) & bicycleroute!=yes {add access = no; add foot = yes} [0x0a road_class=0 road_speed=0 resolution 22]
highway=bridleway & (bicycle!=yes | bicycle!=designated | bicycleroute!=yes | mtb_from_relation!=yes) 	{add access = no; add foot = yes} [0x29 road_class=0 road_speed=0 resolution 22]

highway=steps & (ramp:bicycle=yes | ramp=yes | ramp:wheelchair=yes) {add access = no; add bicycle = yes; add foot = yes} [0x1300 road_class=0 road_speed=0 resolution 24]
highway=steps {add access = no; add foot = yes} [0x13 road_class=0 road_speed=0 resolution 24]

# cycleroutes
ncn_from_relation=yes | icn_from_relation=yes  [0x10118 resolution 16-16 continue]
bicycleroute=yes [0x10118 resolution 18-18 continue]
bicycleroute=yes [0x10119 resolution 21-20 continue]

ncn_from_relation=yes | lcn_from_relation=yes | ncn_ref=* | lcn_ref=* {name '${nref|highway-symbol:oval}'| '${ncn_ref|highway-symbol:oval}' | '${lcn_ref|highway-symbol:oval}' | '${lref|highway-symbol:oval}' } [0x28 resolution 22 continue] 
rcn_from_relation=yes  {name '${rnote}' | '${rname}'} [0x19 resolution 22 continue]
lcn_from_relation=yes  {name '${lname}'} [0x27 resolution 22 continue]
bicycleroute=yes [0x02 road_class=4 road_speed=3 resolution 22 continue]



# Mop up any unrecognised highway types
#highway=* & area!=yes [0x06 road_class=0 road_speed=0 resolution 23]

railway=abandoned [0x0a road_class=0 road_speed=1 resolution 24]
railway=disused [0x2a resolution 23]
railway=light_rail & !(layer<0) [0x10114 resolution 23]

railway=rail & tunnel=yes  [0x10113 default_name="tunnel" resolution 21-18 continue with_actions]
railway=rail & tunnel!=yes [0x2a resolution 21-18 continue with_actions]
railway=rail & tunnel=yes  [0x10109 resolution 22]
railway=rail & tunnel!=yes [0x10114 resolution 22]

railway=subway & (layer>0) [0x10114 resolution 22]
railway=subway & (layer<0) [0x10113 resolution 22]
railway=subway [0x10113 resolution 22]

railway=construction & (mkgmap:country=NLD | mkgmap:region="Vlaanderen") [0x10113 default_name="in aanleg" resolution 22]
railway=construction [0x10113 default_name="construction" resolution 22]

railway=tram  [0x2a default_name="tram" resolution 24]
railway=funicular | aerialway=* | railway=narrow_gauge | railway=monorail [0x10114 resolution 22]

highway=platform | (railway=platform & area!=yes) {add access = no; add foot = yes} [0x07 road_class=0 road_speed=0 resolution 24]

route=ferry [0x10017  resolution 21-18 continue]
route=ferry [0x1b road_class=3 road_speed=0 resolution 22]

waterway=river & natural!=water [0x18 resolution 20-16 continue]
waterway=river & natural!=water [0x1f resolution 21]
waterway=canal & natural!=water [0x18 resolution 22-21 continue]
waterway=canal & natural!=water [0x1f resolution 23]
waterway=stream & natural!=water [0x18 resolution 24]
waterway=drain & natural!=water [0x18 resolution 24]
waterway=ditch | barrier=ditch  [0x18 resolution 24]

# The following boundary styles are after the highway rules because ways
# are frequently tagged with both and we want the highway to take priority.

boundary2=yes { name '${mkgmap:boundary2_name}' } [0x1e resolution 16]
boundary4=yes { name '${mkgmap:boundary4_name}' } [0x1d resolution 18]
boundary8=yes { name '${mkgmap:boundary8_name}' } [0x1c resolution 24]


#other line elements
man_made=wildlife_crossing [0x0a default_name="ecoduct" resolution 22]
natural=coastline [0x1f resolution 16]
natural=cliff [0x10115  resolution 23]
barrier=city_wall | barrier=wall [0x10012 resolution 23]

man_made=pier & area!=yes {name '${name}'} [0x08 default_name="pier" road_class=0 road_speed=0 resolution 24 continue with_actions]

	

	